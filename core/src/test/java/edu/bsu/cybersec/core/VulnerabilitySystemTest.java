package edu.bsu.cybersec.core;

import org.junit.Test;
import tripleplay.entity.Entity;

import static org.junit.Assert.assertEquals;

public class VulnerabilitySystemTest extends AbstractSystemTest {

    private static final float VULNERABILITY = 1.0f;

    @Override
    public void setUp() {
        super.setUp();
        new VulnerabilitySystem(world);
    }

    @Test
    public void testUpdate_noVulnerabilities_noExposure() {
        advanceOneSecond();
        assertExposureIs(0);
    }

    private void assertExposureIs(float expected) {
        assertEquals(expected, world.exposure.get(), EPSILON);
    }

    @Test
    public void testUpdate_oneActiveVulnerability_exposureEqualsVulnerability() {
        createVulnerability(true);
        advanceOneSecond();
        assertExposureIs(VULNERABILITY);
    }

    private Entity createVulnerability(boolean isVulnerabilityActive) {
        Entity e = world.create(true).add(world.vulnerability, world.vulnerabilityState);
        world.vulnerability.set(e.id, VULNERABILITY);
        world.vulnerabilityState.set(e.id, isVulnerabilityActive ?
                VulnerabilityState.ACTIVE.value : VulnerabilityState.INACTIVE.value);
        return e;
    }

    @Test
    public void testUpdate_oneInactiveVulnerability_noExposure() {
        createVulnerability(false);
        advanceOneSecond();
        assertExposureIs(0);
    }
}
